"""
IX-PhantomPhreak Exploit Detector

Monitors AI system input streams and internal state changes for signs of
exploit attempts, malicious input patterns, or unauthorized access behaviors.
"""

import re
from typing import List

class ExploitDetector:
    def __init__(self):
        self.blacklist_patterns = [
            r"(DROP\s+TABLE)",         # SQL injection
            r"(UNION\s+SELECT)",       # SQL injection
            r"(<script>)",             # XSS attack
            r"(eval\()",               # Code injection
            r"(\.\./)",                # Directory traversal
        ]
        self.compiled_patterns = [re.compile(p, re.IGNORECASE) for p in self.blacklist_patterns]

    def scan_input(self, text: str) -> List[str]:
        """
        Scan input text for suspicious patterns.
        Returns list of matched patterns.
        """
        matches = []
        for pattern in self.compiled_patterns:
            if pattern.search(text):
                matches.append(pattern.pattern)
        return matches

    def is_exploit_attempt(self, text: str) -> bool:
        """
        Determine if the input text is likely an exploit attempt.
        """
        return len(self.scan_input(text)) > 0

# Example usage
if __name__ == "__main__":
    detector = ExploitDetector()
    test_input = "DROP TABLE users;"
    print("Exploit patterns found:", detector.scan_input(test_input))
    print("Is exploit attempt:", detector.is_exploit_attempt(test_input))
